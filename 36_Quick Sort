#include<bits/stdc++.h>
using namespace std;

// Creating partition function
int partition(int arr[],int s,int e){
    int pivot= arr[s];
    int cnt= 0;
    for (int i = s+1; i <=e; i++)
    {
        if(arr[i]<=pivot){
            cnt++;
        }
    }
    //
    int pivotIndex = s+cnt;
    swap(arr[pivotIndex],arr[s]);
    int i=s,j=e;

    while(i<pivotIndex && j>pivotIndex){
        while (arr[i]<pivot)
        {
            i++;
        }
        while (arr[j]>pivot)
        {
            j--;
        }
        
     
        if(i<pivotIndex && j>pivotIndex){
            swap(arr[i++],arr[j--]); // Post increment:
        }
    }
    return pivotIndex;
    
}


// creating Quicksort function:
void quickSort(int arr[],int s,int e){
   //base case:
    if(s>=e){
        return;
    }
    //partitioning:
    int p = partition(arr,s,e);//pivot
    
    quickSort(arr,s,p-1);
    quickSort(arr,p+1,e);
}

int main(){
    int n;cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
    }
    
    quickSort(arr,0,n-1);
    for (int i = 0; i < n; i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    
}
